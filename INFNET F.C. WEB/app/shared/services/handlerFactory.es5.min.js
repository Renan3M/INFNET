"use strict";(function(){function n(n,t,i,r,u,f,e){function o(e,o,s){function y(n){h.resolve(n.data)}function p(n,t){if(n!==null||t!==-1){var r=angular.fromJson(n);r.StatusOperacao===401?(f.cancelRequests(),i.notifyUnauthorized()):($(".block").removeClass("block-opt-refresh"),h.reject({Mensagem:"Não foi possível completar a requisição."}))}}var l,a;u="http://localhost:64301/";var v=angular.toJson(s),h=t.defer(),c=t.defer();return f.addRequest(c),l={url:u+e,method:o,data:v,crossDomain:!0,timeout:c.promise,headers:{Accept:"application/json","Content-Type":"application/json",Authorization:i.getToken(),Sid:r.getSid()},xhrFields:{withCredentials:!0}},a=n(l),a.then(y)["catch"](p),h.promise}function s(u,e,o,s){function a(n,t,i){try{h.resolve(angular.fromJson(n.data))}catch(r){h.resolve({file:n,headers:i()})}}function v(n){switch(n.status){case-1:break;case 401:f.cancelRequests();i.notifyUnauthorized();break;case 404:h.reject({Mensagem:"O caminho especificado não foi encontrado."});break;case 500:h.reject({Mensagem:"Ocorreu um erro no servidor durante a requisição."});break;default:h.reject({Mensagem:"Não foi possível completar a requisição."})}}var h=t.defer(),c=t.defer(),l;return f.addRequest(c),l=n({url:u,method:e,data:s?o:angular.toJson(o),timeout:c.promise,headers:{Accept:s?undefined:"application/json","Content-Type":s?undefined:"application/json",Authorization:i.getToken(),Sid:r.getSid()},transformResponse:angular.identity,xhrFields:{withCredentials:!0}}),l.then(a,v),h.promise}function h(n,t,i){function r(){e.sweetAlertErrorRequest(function(){})}return{success:function(u){o(n,t,i).then(u)["catch"](r)}}}return{ajax:o,ajaxSuccess:h,ajaxRequest:s}}angular.module("MainModule").factory("HandlerFactory",n);n.$inject=["$http","$q","TokenService","UsuarioService","Host","HttpCancelService","NotificationService"]})();