// <auto-generated />
using System;
using INFNET_F.C._API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace INFNET_F.C._API.Migrations
{
    [DbContext(typeof(InfnetDBContext))]
    [Migration("20200602024209_SocioAdress")]
    partial class SocioAdress
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("INFNET_F.C._API.Models.Assinatura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IDPLANO_FKID")
                        .HasColumnType("int");

                    b.Property<int>("IDSOCIO_FKID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IDPLANO_FKID");

                    b.HasIndex("IDSOCIO_FKID");

                    b.ToTable("Assinatura");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Cobranca", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDASSINATURA_FKID")
                        .HasColumnType("int");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnType("int");

                    b.Property<double>("ValorParcelas")
                        .HasColumnType("float");

                    b.Property<bool>("isRecorrente")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("IDASSINATURA_FKID");

                    b.ToTable("Cobranca");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Duvida", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("IDSOCIO_FKID")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.HasKey("ID");

                    b.HasIndex("IDSOCIO_FKID");

                    b.ToTable("Duvida");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Plano", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("QtdDisponivel")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Plano");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Resposta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDDUVIDA_FKID")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(600)")
                        .HasMaxLength(600);

                    b.HasKey("ID");

                    b.HasIndex("IDDUVIDA_FKID");

                    b.ToTable("Resposta");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Socio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("ID");

                    b.ToTable("Socio");
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Assinatura", b =>
                {
                    b.HasOne("INFNET_F.C._API.Models.Plano", "IDPLANO_FK")
                        .WithMany("Assinaturas")
                        .HasForeignKey("IDPLANO_FKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("INFNET_F.C._API.Models.Socio", "IDSOCIO_FK")
                        .WithMany("Assinaturas")
                        .HasForeignKey("IDSOCIO_FKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Cobranca", b =>
                {
                    b.HasOne("INFNET_F.C._API.Models.Assinatura", "IDASSINATURA_FK")
                        .WithMany("Cobrancas")
                        .HasForeignKey("IDASSINATURA_FKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Duvida", b =>
                {
                    b.HasOne("INFNET_F.C._API.Models.Socio", "IDSOCIO_FK")
                        .WithMany("Duvidas")
                        .HasForeignKey("IDSOCIO_FKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("INFNET_F.C._API.Models.Resposta", b =>
                {
                    b.HasOne("INFNET_F.C._API.Models.Duvida", "IDDUVIDA_FK")
                        .WithMany("Respostas")
                        .HasForeignKey("IDDUVIDA_FKID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
